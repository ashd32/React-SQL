{"version":3,"sources":["monkeys.js","createStore.js","Provider.js","Query.js","Mutation.js","Actions.js","hoc.js","index.js"],"names":["LS","alasql","engines","LOCALSTORAGE","intoTable","databaseid","tableid","value","_columns","cb","res","length","tb","restoreTable","columnid","identities","ident","index","step","data","concat","storeTable","createStore","events","EventEmitter","query","sql","params","promise","execute","mutate","a","result","emit","subscribe","callback","addListener","removeListener","Context","React","createContext","connect","WrappedComponent","component","Enhanced","props","Consumer","store","displayName","name","Provider","children","Query","context","executeQuery","setState","loading","state","initial","_unsubscribe","this","Component","defaultProps","handleMutate","createHandlers","actions","Object","entries","reduce","acc","action","args","handlers","call","maybeFn","wrap","SqlComponent","operation","options","wrappedProps","mutation","Mutation","withActions","compose","funcs","arg","b"],"mappings":"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","file":"static/js/main.f9723415.chunk.js","sourcesContent":["import alasql from \"alasql\";\n\nconst LS = alasql.engines.LOCALSTORAGE;\n\n/**\n * Fix primary key generation\n */\nLS.intoTable = function(databaseid, tableid, value, _columns, cb) {\n  var res = value.length;\n  var tb = LS.restoreTable(databaseid, tableid);\n  for (var columnid in tb.identities) {\n    var ident = tb.identities[columnid];\n\n    for (var index in value) {\n      value[index][columnid] = ident.value;\n      ident.value += ident.step;\n    }\n  }\n  if (!tb.data) tb.data = [];\n  tb.data = tb.data.concat(value);\n  LS.storeTable(databaseid, tableid);\n  if (cb) res = cb(res);\n  return res;\n};\n","import './monkeys'\nimport alasql from \"alasql\";\nimport { EventEmitter } from \"events\";\n\nconst createStore = () => {\n  const events = new EventEmitter();\n\n  const subscribe = callback => {\n    events.addListener(\"mutate\", callback);\n\n    return () => {\n      events.removeListener(\"mutate\", callback);\n    };\n  };\n\n  const query = (sql, params) => {\n    return alasql.promise(sql, params);\n  };\n\n  const mutate = async (sql, params) => {\n    const result = await alasql.promise(sql, params);\n    events.emit(\"mutate\", sql, params, result);\n    return result;\n  };\n\n  return {\n    execute: query,\n    query,\n    mutate,\n    subscribe\n  };\n};\n\nexport default createStore;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Context = React.createContext(\"resql\");\n\nconst getName = component => {\n  return component.displayName || component.name || \"Component\";\n};\n\nexport const connect = WrappedComponent => {\n  const Enhanced = props => (\n    <Context.Consumer>\n      {store => <WrappedComponent store={store} {...props} />}\n    </Context.Consumer>\n  );\n\n  Enhanced.displayName = `Connect(${getName(WrappedComponent)})`;\n  return Enhanced;\n};\n\nconst Provider = ({ store, children }) => (\n  <Context.Provider value={store} children={children} />\n);\n\nProvider.propTypes = {\n  store: PropTypes.shape({\n    execute: PropTypes.func.isRequired,\n    query: PropTypes.func.isRequired,\n    mutate: PropTypes.func.isRequired,\n    subscribe: PropTypes.func.isRequired\n  })\n};\n\nexport default Provider;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"./Provider\";\n\nclass Query extends Component {\n  static propTypes = {\n    sql: PropTypes.string.isRequired,\n    initial: PropTypes.any,\n    params: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired\n  };\n\n  static defaultProps = {\n    initial: [],\n    params: []\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = { loading: true, data: props.initial };\n    this._unsubscribe = this.props.store.subscribe(this.executeQuery);\n  }\n\n  componentDidMount() {\n    this.executeQuery();\n  }\n\n  componentWillUnmount() {\n    if (this._unsubscribe) {\n      this._unsubscribe();\n    }\n  }\n\n  executeQuery = async () => {\n    this.setState({ loading: true });\n    const { store, sql, params } = this.props;\n    const data = await store.query(sql, params);\n    this.setState({ data, loading: false });\n  };\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport default connect(Query);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"./Provider\";\n\nclass Mutation extends Component {\n  static propTypes = {\n    sql: PropTypes.string.isRequired\n  };\n\n  handleMutate = params => {\n    this.props.store.mutate(this.props.sql, params);\n  };\n\n  render() {\n    return this.props.children(this.handleMutate);\n  }\n}\n\nexport default connect(Mutation);\n","import { Component } from 'react';\nimport { connect } from './Provider';\n\nconst createHandlers = ({ store, children: _children, ...actions }) => {\n  return Object.entries(actions).reduce(\n    (acc, [name, action]) => ({\n      ...acc,\n      [name]: (...args) => action(store, ...args)\n    }),\n    {}\n  );\n}\n\nclass Actions extends Component {\n  handlers = createHandlers(this.props)\n\n  render() {\n    return this.props.children(this.handlers)\n  }\n}\n\nexport default connect(Actions);\n","import React from 'react';\nimport Query from './Query';\nimport Mutation from './Mutation';\nimport Actions from './Actions';\n\nconst call = (maybeFn, ...args) => {\n  if (typeof maybeFn === \"function\") {\n    return maybeFn(...args);\n  }\n\n  return maybeFn;\n};\n\nconst wrap = (SqlComponent, operation) => (sql, {\n  options,\n  name = operation,\n  props = query => ({ [name]: query })\n}) => WrappedComponent => wrappedProps => (\n  <SqlComponent sql={sql} {...call(options, wrappedProps)}>\n    {result => (\n      <WrappedComponent\n        {...wrappedProps}\n        {...call(props, result, wrappedProps)}\n      />\n    )}\n  </SqlComponent>\n);\n\nexport const query = wrap(Query, \"query\");\nexport const mutation = wrap(Mutation, \"mutate\");\n\nexport const withActions = actions => WrappedComponent => props => (\n  <Actions {...actions}>\n    {handlers => <WrappedComponent {...props} {...handlers} />}\n  </Actions>\n);\n\nexport const compose = (...funcs) => {\n  if (funcs.length === 0) {\n    return arg => arg\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0]\n  }\n\n  return funcs.reduce((a, b) => (...args) => a(b(...args)))\n}\n","export { default as createStore } from \"./createStore\";\nexport { default as Provider } from \"./Provider\";\nexport { default as Query } from \"./Query\";\nexport { default as Mutation } from \"./Mutation\";\nexport { default as Actions } from \"./Actions\";\nexport * from \"./hoc\";\n"],"sourceRoot":""}